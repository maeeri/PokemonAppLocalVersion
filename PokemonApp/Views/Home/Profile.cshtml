@using System.Security.Claims;
@using System.Security.Principal;
@using System.Xml.XPath
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using PokemonApp.Controllers;
@using PokemonApp.Data
@using PokemonApp.Methods
@model ViewModel;
@{

    ViewData["Title"] = "Profile";
    Random rnd = new Random();
    var pokemons = CardMethods.GetPokemonCards();
    var random = pokemons.OrderBy(x => rnd.Next()).Take(1);
    PokemonAppContext userDB = new PokemonAppContext();
}
﻿

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] Pokemon</title>

    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="~/css/profiili.css" />
    <script src="~/js/Profiili.js" defer></script>

    <script src="https://code.jquery.com/jquery-git.js"></script>
</head>

<body>

    <div class="battleCards">
        <div id="selected">
        </div>

        <button onclick="battleComigSoon()" class="Bbutton"><span>START BATTLE!</span></button>
        <script>
            function battleComigSoon() {
                alert("coming soon...");
            }
        </script>
    </div>

    <div class="ownedCards">

        <script>

            function moveButton(elem) {
                if ($(elem).parent().attr("id") == "nonSelected") {
                    $(elem).detach().appendTo('#selected');
                }
                else {
                    $(elem).detach().appendTo('#nonSelected');
                }
            }

        </script>

        <div id="nonSelected">

            @{
                if (Model.PCards.Count > 0)
                {
                    List<string> pokemonids = (from x in Model.PCards select x.PokemonId).ToList();
                    List<Datum> pokemonlist = new List<Datum>();

                    foreach (var i in pokemonids)
                    {
                        pokemonlist.Add(pokemons.Where(x => x.id == i).FirstOrDefault());
                    }

                    @foreach (var o in pokemonlist) //json pokemonkortit
                    {
                        string url = o.images.small;
                        <img src=@url id="btndefault" title=@o.name onclick="movebutton(this)" draggable="true" width="160" height="195" />
                    }

                }


            }
        </div>
    </div>
<footer class="profileFooter">
        <div class="profile">

            <p>Search friends</p>
            <form asp-controller="Home" asp-action="Profile" asp-route-viewModel="@Model">

                <input type="text" class="search" name="searchString" asp-route-searchString="searchString" />
                <input type="submit" class="search" value="Search" />
            </form>

            @if (@Model.Users != null)
            {

                foreach (var item in @Model.Users)
                {

                    <p>
                        @item.Username <a asp-controller="Db" asp-action="FollowFriend" asp-route-userId="@Model.User.Id" asp-route-followId="@item.Id">
                            <span title="follow friend">
                                <i class="fa-solid fa-plus" style="color:limegreen;" title="Add friend"></i>

                            </span>
                        </a>
                    </p>
                }
            }


            @*<div class="friend">
                <p>Your friends:</p>
                @{
                    var connections = Model.Connections;
                    foreach (var item in connections)
                    {
                        int userlevel = Convert.ToInt32(DbController.GetUserById(item.OtherUser).Xp) / 100;
                        <p>
                            @DbController.GetUserById(item.OtherUser).Username      Cash: @DbController.GetUserById(item.OtherUser).Cash Level: @userlevel
                            <a class="redtext" asp-controller="Db" asp-action="StopFollowing" asp-route-id="@item.Id" title="Stop following"> X </a>
                        </p>
                    }
                }
            </div>*@


            @{
                var tUser = Model.User;
            }
            @*-------------XP bar-------------*@
            <img src="~/Images/Charmander.png" height="50" class="profilePic" />
            <p>@tUser.Username</p>
            <p>Coins: @tUser.Cash £</p>



            @{

                var theUser = Model.User;
                int xp;
                int level = 0;
                string xpBarXp;
                if (theUser.Xp > 100)
                {
                    level = Convert.ToInt32(theUser.Xp / 100);
                    xp = Convert.ToInt32(theUser.Xp % 100);
                    xpBarXp = $"{xp * 10} XP";
                }

                else
                {
                    xp = Convert.ToInt32(theUser.Xp);
                    xpBarXp = $"{xp * 10} XP";
                }
                <p>Level: @level</p>

            }

            <div class="progress">
                <div class="progress-done" data-done="@xp">
                    <span class="progress-text">@xpBarXp</span>
                </div>
            </div>

            <script src="~/js/korttiliike.js"></script>
            <script src="~/js/FriendSearch.js"></script>
        </div>
    </footer>
</body>